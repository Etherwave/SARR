knitr::opts_chunk$set(echo = TRUE)
require(reshape2)
require(ggplot2)
require(ggthemes)
theme_set(theme_minimal())
require(GGally)
require(ggExtra)
# Use your paths
source("./imagematrix.R")
load("../../Data/bright.Rdata")
# Inspect what they are in the Environment window
x <- seq(.1, 5, length.out=500)
y <- gamma(x)
ggplot(data= NULL, aes(x = x, y = y)) +
geom_point(color = "darkred")  #添加点
x <- seq(.1, 20, length.out=500)
y1 <- dgamma(x, shape=1, scale=2)
y2 <- dgamma(x, shape=2, scale=2)
y3 <- dgamma(x, shape=3, scale=2)
y4 <- dgamma(x, shape=5, scale=1)
y5 <- dgamma(x, shape=9, scale=0.5)
y6 <- dgamma(x, shape=7.5, scale=1)
y7 <- dgamma(x, shape=0.5, scale=1)
SimilarityDistances <- data.frame(s, y1, y2, y3, y4, y5, y6)
knitr::opts_chunk$set(echo = TRUE)
require(reshape2)
require(ggplot2)
require(ggthemes)
theme_set(theme_minimal())
require(GGally)
require(ggExtra)
# Use your paths
source("./imagematrix.R")
load("../../Data/bright.Rdata")
# Inspect what they are in the Environment window
x <- seq(.1, 5, length.out=500)
y <- gamma(x)
ggplot(data= NULL, aes(x = x, y = y)) +
geom_point(color = "darkred")  #添加点
x <- seq(.1, 20, length.out=500)
y1 <- dgamma(x, shape=1, scale=2)
y2 <- dgamma(x, shape=2, scale=2)
y3 <- dgamma(x, shape=3, scale=2)
y4 <- dgamma(x, shape=5, scale=1)
y5 <- dgamma(x, shape=9, scale=0.5)
y6 <- dgamma(x, shape=7.5, scale=1)
y7 <- dgamma(x, shape=0.5, scale=1)
SimilarityDistances <- data.frame(x, y1, y2, y3, y4, y5, y6)
SimilarityDistances.melt <- melt(SimilarityDistances,
measure.vars=2:7,
value.name = "Transformations",
variable.name = "Transformation"
)
ggplot(SimilarityDistances.melt,
aes(x=s, y=Transformations,
color=Transformation,
group=Transformation
))+
geom_line(size=3, alpha=.5)+
geom_line(col='black', size=.2)+
ylim(c(0, .5))+
theme_economist()
knitr::opts_chunk$set(echo = TRUE)
require(reshape2)
require(ggplot2)
require(ggthemes)
theme_set(theme_minimal())
require(GGally)
require(ggExtra)
# Use your paths
source("./imagematrix.R")
load("../../Data/bright.Rdata")
# Inspect what they are in the Environment window
x <- seq(.1, 5, length.out=500)
y <- gamma(x)
ggplot(data= NULL, aes(x = x, y = y)) +
geom_point(color = "darkred")  #添加点
x <- seq(.1, 20, length.out=500)
y1 <- dgamma(x, shape=1, scale=2)
y2 <- dgamma(x, shape=2, scale=2)
y3 <- dgamma(x, shape=3, scale=2)
y4 <- dgamma(x, shape=5, scale=1)
y5 <- dgamma(x, shape=9, scale=0.5)
y6 <- dgamma(x, shape=7.5, scale=1)
y7 <- dgamma(x, shape=0.5, scale=1)
SimilarityDistances <- data.frame(x, y1, y2, y3, y4, y5, y6)
SimilarityDistances.melt <- melt(SimilarityDistances,
measure.vars=2:7,
value.name = "Transformations",
variable.name = "Transformation"
)
ggplot(SimilarityDistances.melt,
aes(x=x, y=Transformations,
color=Transformation,
group=Transformation
))+
geom_line(size=3, alpha=.5)+
geom_line(col='black', size=.2)+
ylim(c(0, .5))+
theme_economist()
x <- seq(.1, 20, length.out=500)
K <- function(z, a, j, L)
{
(2*j*L)*(j*L*z)^((a+L)/2-1)*besselK(2*(sqrt(j*L*z)), a-L)/(gamma(a)*gamma(L))
}
y1 <- K(x, 1, 2, 1)
y3 <- K(x, 3, 2, 1)
y8 <- K(x, 8, 2, 1)
SimilarityDistances <- data.frame(x, y1, y3, y8)
SimilarityDistances.melt <- melt(SimilarityDistances,
measure.vars=2:4,
value.name = "Transformations",
variable.name = "Transformation"
)
ggplot(SimilarityDistances.melt,
aes(x=x, y=Transformations,
color=Transformation,
group=Transformation
))+
geom_line(size=3, alpha=.5)+
geom_line(col='black', size=.2)+
ylim(c(0, .5))+
theme_economist()
x <- seq(.1, 10, length.out=500)
G <- function(z, a, j, L)
{
L^L*gamma(L-a)*z^(L-1)/(j^a*gamma(L)*gamma(-a)*(j+L*z)^(L-a))
}
y1 <- G(x, -1.5, 2, 1)
y3 <- G(x, -3, 2, 1)
y8 <- G(x, -8, 2, 1)
SimilarityDistances <- data.frame(x, y1, y3, y8)
SimilarityDistances.melt <- melt(SimilarityDistances,
measure.vars=2:4,
value.name = "Transformations",
variable.name = "Transformation"
)
ggplot(SimilarityDistances.melt,
aes(x=x, y=Transformations,
color=Transformation,
group=Transformation
))+
geom_line(size=3, alpha=.5)+
geom_line(col='black', size=.2)+
ylim(c(0, .5))+
theme_economist()
f1 <- function(x){1+0*x}
f2 <- function(x){integrate(f1, 0, x)}
n = 1000
a <- runif(n, 0, 1)
y <- (1:n)
for(i in (1:n))
{
x <- f2(a[i])$value
y[i]<-x
}
z <- data.frame(z = as.vector(y))
K <- function(z, a, j, L)
{
(2*j*L)*(j*L*z)^((a+L)/2-1)*besselK(2*(sqrt(j*L*z)), a-L)/(gamma(a)*gamma(L))
}
f1 <- function(x){K(x, 1, 2, 1)}
f2 <- function(x){integrate(f1, 0, x)}
n = 1000
a <- runif(n, 0, 20)
y <- (1:n)
for(i in (1:n))
{
x <- f2(a[i])$value
y[i]<-x
}
z <- data.frame(z = as.vector(y))
typeof(bright)
dim(bright)
range(bright)
vector.bright <- data.frame(bright=as.vector(bright))
summary(vector.bright)
vector.bright <- data.frame(as.vector(bright))
ggplot(vector.bright, aes(x=bright)) +
geom_boxplot(notch = TRUE)+
scale_x_log10()
x <- bright
x <- data.frame(x = as.vector(x))
ggplot(x, aes(x=x)) +
geom_density(col="green", size=2)+
scale_x_log10()
plot(imagematrix(normalize(log(bright))))
clipping <- function(img, low=0, high=1) {
img[img < low] <- low
img[img > high] <- high
img
}
normalize2 <- function(img) {
clipping(img - mean(img))
}
plot(imagematrix(normalize2(log(bright))))
normalize3 <- function(img) {
a <- quantile(img, 0.75)
clipping(img - a)
}
plot(imagematrix(normalize3(log(bright))))
normalize3 <- function(img) {
a <- quantile(img, 0.90)
clipping(img - a)
}
plot(imagematrix(normalize3(log(bright))))
